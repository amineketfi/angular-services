{"version":3,"sources":["./$_lazy_route_resources|lazy|groupOptions: {}|namespace object","./src/app/add-book/add-book.component.ts","./src/app/add-reader/add-reader.component.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/core/badge.service.ts","./src/app/core/data.service.ts","./src/app/core/logger.service.ts","./src/app/dashboard/dashboard.component.ts","./src/app/data.ts","./src/app/edit-book/edit-book.component.ts","./src/app/edit-reader/edit-reader.component.ts","./src/app/models/book-tracker-error.ts","./src/environments/environment.ts","./src/main.ts","./src/app/app.component.css","./src/app/add-book/add-book.component.html","./src/app/add-reader/add-reader.component.html","./src/app/app.component.html","./src/app/dashboard/dashboard.component.html","./src/app/edit-book/edit-book.component.html","./src/app/edit-reader/edit-reader.component.html"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(() => {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = () => ([]);\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 8255;\nmodule.exports = webpackEmptyAsyncContext;","import { Component, OnInit } from '@angular/core';\n\nimport { Book } from \"app/models/book\";\n\n@Component({\n  selector: 'app-add-book',\n  templateUrl: './add-book.component.html',\n  styles: []\n})\nexport class AddBookComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() { }\n\n  saveBook(formValues: any): void {\n    let newBook: Book = <Book>formValues;\n    newBook.bookID = 0;\n    console.log(newBook);\n    console.warn('Save new book not yet implemented.');\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\nimport { Reader } from \"app/models/reader\";\n\n@Component({\n  selector: 'app-add-reader',\n  templateUrl: './add-reader.component.html',\n  styles: []\n})\nexport class AddReaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() { }\n\n  saveReader(formValues: any): void {\n    let newReader: Reader = <Reader>formValues;\n    newReader.readerID = 0;\n    console.log(newReader);\n    console.warn('Save new reader not yet implemented.');\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { AddBookComponent } from \"app/add-book/add-book.component\";\nimport { AddReaderComponent } from \"app/add-reader/add-reader.component\";\nimport { DashboardComponent } from \"app/dashboard/dashboard.component\";\nimport { EditBookComponent } from \"app/edit-book/edit-book.component\";\nimport { EditReaderComponent } from \"app/edit-reader/edit-reader.component\";\n\nconst routes: Routes = [\n  { path: 'dashboard', component: DashboardComponent },\n  { path: 'addbook', component: AddBookComponent },\n  { path: 'addreader', component: AddReaderComponent },\n  { path: 'editreader/:id', component: EditReaderComponent },\n  { path: 'editbook/:id', component: EditBookComponent },\n  { path: '', redirectTo: 'dashboard', pathMatch: 'full' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { AddBookComponent } from './add-book/add-book.component';\nimport { AddReaderComponent } from './add-reader/add-reader.component';\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { EditBookComponent } from './edit-book/edit-book.component';\nimport { EditReaderComponent } from './edit-reader/edit-reader.component';\nimport { HttpClientModule } from '@angular/common/http';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DashboardComponent,\n    AddBookComponent,\n    EditReaderComponent,\n    EditBookComponent,\n    AddReaderComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [\n  //   // Simple Service provider(Angular default):\n  //    { provide: LoggerService, useClass: LoggerService }\n  //   // Use Existing Service:(for example you hade a service and you want to change it with a new one)\n  //   PlainLoggerService, //(the new one)\n  //   { provide: LoggerService, useExisting: PlainLoggerService },\n  //   // Replace the service with an object literal\n  //   { provide: LoggerService, useValue: {\n  //     log: (message: string) => console.log(`MESSAGE: ${message}`),\n  //     error :(message: string) => console.error(`ERROR: ${message}`)\n  //   }\n  //   // Customize the provider with a factory function\n  //   { provide:LoggerService, useFactory: dataServiceFactory, deps: [LoggerService] }\n  // }\n\n\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class BadgeService {\n\n  constructor() { }\n\n  getReaderBadge(minutesRead: number) {\n    if(minutesRead > 5000) {\n      return 'Book Worm';\n    }\n    else if (minutesRead > 2500) {\n      return 'Page Turner';\n    }\n    else {\n      return 'Getting Started';\n    }\n  }\n}\n","import { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { allBooks, allReaders } from 'app/data';\nimport { Book } from 'app/models/book';\nimport { Reader } from 'app/models/reader';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { LoggerService } from './logger.service';\nimport { BookTrackerError } from 'app/models/book-tracker-error';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n\n  constructor(\n    private loggerService: LoggerService,\n    private http: HttpClient\n    ) { }\n\n  mostPopularBook: Book = allBooks[0];\n\n  // using Promise fpor async business logic\n  getAuthorRecomondation(readerID: number): Promise<string> {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => { // using setTimeOut to simulate a long running test\n        if (readerID > 0) resolve('Dr. Seuss');\n        else reject('Invalid reader ID');\n      }, 2000);\n    })\n  }\n\n  setMostPopularBook(popularBook: Book) {\n    this.mostPopularBook = popularBook;\n  }\n\n  getAllReaders(): Observable<Reader[] | BookTrackerError> {\n    return this.http.get<Reader[]>('/api/readers').pipe(\n      catchError(this.handleError)\n    );\n  }\n\n  getReaderById(id: number): Reader {\n    return allReaders.find(reader => reader.readerID === id);\n  }\n\n  getAllBooks():Book[] {\n    return allBooks;\n  }\n\n  getBookById(id: number): Book {\n    return allBooks.find( book => book.bookID === id);\n  }\n\n  private handleError(error: HttpErrorResponse): Observable<BookTrackerError> {\n    let dataError = new BookTrackerError();\n    dataError.errorNumber = 100;\n    dataError.message = error.statusText;\n    dataError.friendlyMessage = 'An error occured retrieving data.';\n    return throwError(dataError);\n  }\n\n}\n","import { Injectable } from \"@angular/core\";\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoggerService {\n  log(message: string) {\n    const timeString = new Date().toLocaleTimeString();\n    console.log(`${message} (${timeString})`);\n  }\n\n  error(message: string) {\n    console.error(`ERROR: ${message}`);\n  }\n}\n"," import { Component, OnInit } from '@angular/core';\n\nimport { Book } from \"app/models/book\";\nimport { Reader } from \"app/models/reader\";\nimport { LoggerService } from 'app/core/logger.service';\nimport { DataService } from 'app/core/data.service';\nimport { BookTrackerError } from 'app/models/book-tracker-error';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styles: []\n})\nexport class DashboardComponent implements OnInit {\n\n  allBooks: Book[];\n  allReaders: Reader[];\n  mostPopularBook: Book;\n\n  constructor(\n    private loggerService: LoggerService,\n    private dataService: DataService\n    ) {\n\n  }\n\n  ngOnInit() {\n    this.allBooks = this.dataService.getAllBooks();\n    this.dataService.getAllReaders().subscribe(\n      (data : Reader[] | BookTrackerError) => this.allReaders = <Reader[]>data,\n      (err: BookTrackerError) => this.loggerService.log(err.friendlyMessage),\n      () => this.loggerService.log('All done getting readers!')\n    );\n    this.mostPopularBook = this.dataService.mostPopularBook;\n\n    // handling a response from a promise\n    this.dataService.getAuthorRecomondation(1)\n      .then(\n        (author: string) => {\n          this.loggerService.log(author); /* called if promise was resolved */\n          // throw new Error('Problem with the success handler!'); // error happend inside a success resolver\n        },\n        (err: string) => this.loggerService.error(`The promise was rejected: ${err}`) // called if promise was rejected\n      )\n      .catch(\n        (error:Error) => this.loggerService.error(error.message) // catch error happend insid the resolved success function\n      );\n\n    this.loggerService.log('Done with dashboard initialization.');\n\n  }\n\n  // Handle a promise using async/await syntax\n  private async getAuthorRecomondationAsync(readerID: number): Promise<void> {\n    try {\n      let author = await this.dataService.getAuthorRecomondation(readerID);\n      this.loggerService.log(author);\n    }\n    catch (error: any) {\n      this.loggerService.error(error);\n    }\n  }\n\n\n  deleteBook(bookID: number): void {\n    console.warn(`Delete book not yet implemented (bookID: ${bookID}).`);\n  }\n\n  deleteReader(readerID: number): void {\n    console.warn(`Delete reader not yet implemented (readerID: ${readerID}).`);\n  }\n\n}\n","import { Book } from \"app/models/book\";\nimport { Reader } from \"app/models/reader\";\n\nexport const allReaders: Reader[] = [\n    { readerID: 1, name: 'Marie', weeklyReadingGoal: 400, totalMinutesRead: 5600 },\n    { readerID: 2, name: 'Daniel', weeklyReadingGoal: 210, totalMinutesRead: 3000 },\n    { readerID: 3, name: 'Lanier', weeklyReadingGoal: 140, totalMinutesRead: 600 }\n  ];\n\nexport const allBooks: Book[] = [\n    { bookID: 1, title: 'Goodnight Moon', author: 'Margaret Wise Brown', publicationYear: 1953 },\n    { bookID: 2, title: 'Green Eggs and Ham', author: 'Dr. Seuss', publicationYear: 1960 },\n    { bookID: 3, title: 'Where the Wild Things Are', author: 'Maurice Sendak', publicationYear: 1963 },\n    { bookID: 4, title: 'The Hobbit', author: 'J. R. R. Tolkien', publicationYear: 1937 },\n    { bookID: 5, title: 'Curious George', author: 'H. A. Rey', publicationYear: 1941 },\n    { bookID: 6, title: 'Alice\\'s Adventures in Wonderland', author: 'Lewis Carroll', publicationYear: 1865 },\n];","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { Book } from 'app/models/book';\nimport { DataService } from 'app/core/data.service';\nimport { LoggerService } from 'app/core/logger.service';\n\n@Component({\n  selector: 'app-edit-book',\n  templateUrl: './edit-book.component.html',\n  styles: [],\n})\nexport class EditBookComponent implements OnInit {\n\n  selectedBook: Book;\n\n\n  constructor(\n    private route: ActivatedRoute,\n    private dataService: DataService,\n    private loggerService: LoggerService,\n\n    ) { }\n\n  ngOnInit() {\n    let bookID: number = parseInt(this.route.snapshot.params['id']);\n    this.selectedBook = this.dataService.getBookById(bookID);\n\n  }\n\n  setMostPopular(): void {\n    this.dataService.setMostPopularBook(this.selectedBook);\n    this.loggerService.log(`New most popular book: ${this.selectedBook.title}`);\n  }\n\n  saveChanges(): void {\n    console.warn('Save changes to book not yet implemented.');\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { BadgeService } from 'app/core/badge.service';\nimport { DataService } from 'app/core/data.service';\n\n\nimport { Reader } from \"app/models/reader\";\n\n@Component({\n  selector: 'app-edit-reader',\n  templateUrl: './edit-reader.component.html',\n  styles: [],\n  providers: [BadgeService]\n})\nexport class EditReaderComponent implements OnInit {\n\n  selectedReader: Reader;\n  currentBadge: string;\n\n  constructor(\n    private route: ActivatedRoute,\n    private dataService: DataService,\n    private badgeService : BadgeService\n    ) { }\n\n  ngOnInit() {\n    let readerID: number = parseInt(this.route.snapshot.params['id']);\n    this.selectedReader = this.dataService.getReaderById(readerID);\n    this.currentBadge = this.badgeService.getReaderBadge(this.selectedReader.totalMinutesRead);\n  }\n\n  saveChanges() {\n    console.warn('Save reader not yet implemented.');\n  }\n}\n","export class BookTrackerError {\n  errorNumber: number;\n  message: string;\n  friendlyMessage: string;\n}\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAuY29tcG9uZW50LmNzcyJ9 */\";","export default \"<div class=\\\"col-lg-5\\\">\\n  <div class=\\\"well bs-component\\\">\\n    <form #addBookForm=\\\"ngForm\\\" (ngSubmit)=\\\"saveBook(addBookForm.value)\\\" class=\\\"form-horizontal\\\">\\n      <fieldset>\\n        <legend>Add New Book</legend>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"inputTitle\\\" class=\\\"col-lg-3 control-label\\\">Title</label>\\n          <div class=\\\"col-lg-8\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputTitle\\\" placeholder=\\\"Title\\\" name=\\\"title\\\" ngModel>\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"inputAuthor\\\" class=\\\"col-lg-3 control-label\\\">Author</label>\\n          <div class=\\\"col-lg-8\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputAuthor\\\" placeholder=\\\"Author\\\" name=\\\"author\\\" ngModel>\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"inputYear\\\" class=\\\"col-lg-3 control-label\\\">Year</label>\\n          <div class=\\\"col-lg-8\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputYear\\\" placeholder=\\\"Year Published\\\" name=\\\"publicationYear\\\" ngModel>\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <div class=\\\"col-lg-8 col-lg-offset-3\\\">\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Save</button>\\n          </div>\\n        </div>\\n      </fieldset>\\n    </form>\\n  </div>\\n</div>\";","export default \"<div class=\\\"col-lg-5\\\">\\n  <div class=\\\"well bs-component\\\">\\n    <form #addReaderForm=\\\"ngForm\\\" (ngSubmit)=\\\"saveReader(addReaderForm.value)\\\" class=\\\"form-horizontal\\\">\\n      <fieldset>\\n        <legend>Add Reader</legend>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"inputGoal\\\" class=\\\"col-lg-3 control-label\\\">Name</label>\\n          <div class=\\\"col-lg-8\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputGoal\\\" placeholder=\\\"Name\\\" name=\\\"name\\\" ngModel>\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"inputGoal\\\" class=\\\"col-lg-3 control-label\\\">Weekly Goal</label>\\n          <div class=\\\"col-lg-8\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputGoal\\\" placeholder=\\\"Weekly Goal\\\" name=\\\"weeklyReadingGoal\\\" ngModel>\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"inputTotal\\\" class=\\\"col-lg-3 control-label\\\">Total Read</label>\\n          <div class=\\\"col-lg-8\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputTotal\\\" placeholder=\\\"Total Minutes Read\\\" name=\\\"totalMinutesRead\\\" ngModel>\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <div class=\\\"col-lg-10 col-lg-offset-3\\\">\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Save</button>\\n          </div>\\n        </div>\\n      </fieldset>\\n    </form>\\n  </div>\\n</div>\";","export default \"<nav class=\\\"navbar navbar-default\\\">\\n    <div class=\\\"container-fluid\\\">\\n        <!-- Brand and toggle get grouped for better mobile display -->\\n        <div class=\\\"navbar-header\\\">\\n            <button type=\\\"button\\\" class=\\\"navbar-toggle collapsed\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#bs-example-navbar-collapse-1\\\">\\n                <span class=\\\"sr-only\\\">Toggle navigation</span>\\n                <span class=\\\"icon-bar\\\"></span>\\n                <span class=\\\"icon-bar\\\"></span>\\n                <span class=\\\"icon-bar\\\"></span>\\n            </button>\\n            <a class=\\\"navbar-brand\\\" [routerLink]=\\\"['/dashboard']\\\">Book Tracker</a>\\n        </div>\\n\\n        <!-- Collect the nav links, forms, and other content for toggling -->\\n        <div class=\\\"collapse navbar-collapse\\\" id=\\\"bs-example-navbar-collapse-1\\\">\\n            <ul class=\\\"nav navbar-nav\\\">\\n                <li><a [routerLink]=\\\"['/addbook']\\\">Add Book<span class=\\\"sr-only\\\">(current)</span></a></li>\\n                <li><a [routerLink]=\\\"['/addreader']\\\">Add Reader</a></li>\\n            </ul>\\n        </div><!-- /.navbar-collapse -->\\n    </div><!-- /.container-fluid -->\\n</nav>\\n\\n<router-outlet></router-outlet>\\n\";","export default \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-4\\\">\\n      <div class=\\\"panel panel-primary\\\">\\n        <div class=\\\"panel-heading\\\">\\n          <h3 class=\\\"panel-title\\\">All Books</h3>\\n        </div>\\n        <div class=\\\"panel-body\\\">\\n        <li *ngFor='let book of allBooks'>\\n          <i>{{book.title}}</i>\\n          <a [routerLink]=\\\"['/editbook', book.bookID]\\\"> Edit </a>\\n          <a (click)=\\\"deleteBook(book.bookID)\\\">Delete</a>\\n        </li>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-4\\\">\\n      <div class=\\\"panel panel-primary\\\">\\n        <div class=\\\"panel-heading\\\">\\n          <h3 class=\\\"panel-title\\\">All Readers</h3>\\n        </div>\\n        <div class=\\\"panel-body\\\">\\n        <li *ngFor='let reader of allReaders'>\\n          {{reader.name}}\\n          <a [routerLink]=\\\"['/editreader', reader.readerID]\\\">Edit</a>\\n          <a (click)=\\\"deleteReader(reader.readerID)\\\"> Delete </a>\\n        </li>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-4\\\">\\n      <div class=\\\"panel panel-primary\\\">\\n        <div class=\\\"panel-heading\\\">\\n          <h3 class=\\\"panel-title\\\">Most Popular Book</h3>\\n        </div>\\n        <div class=\\\"panel-body\\\">\\n          <i>{{mostPopularBook.title}}</i> by {{mostPopularBook.author}}\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\";","export default \"<div class=\\\"col-lg-5\\\">\\n  <div class=\\\"well bs-component\\\">\\n    <form class=\\\"form-horizontal\\\">\\n      <fieldset>\\n        <legend>Edit Book</legend>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"inputTitle\\\" class=\\\"col-lg-3 control-label\\\">Title</label>\\n          <div class=\\\"col-lg-8\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputTitle\\\" placeholder=\\\"Title\\\" [(ngModel)]=\\\"selectedBook.title\\\" name=\\\"title\\\">\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"inputAuthor\\\" class=\\\"col-lg-3 control-label\\\">Author</label>\\n          <div class=\\\"col-lg-8\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputAuthor\\\" placeholder=\\\"Author\\\" [(ngModel)]=\\\"selectedBook.author\\\" name=\\\"author\\\">\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"inputYear\\\" class=\\\"col-lg-3 control-label\\\">Year</label>\\n          <div class=\\\"col-lg-8\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputYear\\\" placeholder=\\\"Year Published\\\" [(ngModel)]=\\\"selectedBook.publicationYear\\\" name=\\\"publicationYear\\\">\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <div class=\\\"col-lg-8 col-lg-offset-3\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"saveChanges()\\\">Save</button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"setMostPopular()\\\">Set As Most Popular</button>\\n          </div>\\n        </div>\\n      </fieldset>\\n    </form>\\n  </div>\\n</div>\";","export default \"<div class=\\\"col-lg-5\\\">\\n  <div class=\\\"well bs-component\\\">\\n    <form class=\\\"form-horizontal\\\">\\n      <fieldset>\\n        <legend>Edit Reader</legend>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"inputGoal\\\" class=\\\"col-lg-3 control-label\\\">Name</label>\\n          <div class=\\\"col-lg-8\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputGoal\\\" placeholder=\\\"Name\\\" [(ngModel)]=\\\"selectedReader.name\\\" name=\\\"name\\\">\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"inputGoal\\\" class=\\\"col-lg-3 control-label\\\">Weekly Goal</label>\\n          <div class=\\\"col-lg-8\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputGoal\\\" placeholder=\\\"Weekly Goal\\\" [(ngModel)]=\\\"selectedReader.weeklyReadingGoal\\\" name=\\\"weeklyReaddingGoal\\\">\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"inputTotal\\\" class=\\\"col-lg-3 control-label\\\">Total Read</label>\\n          <div class=\\\"col-lg-8\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputTotal\\\" placeholder=\\\"Total Minutes Read\\\" [(ngModel)]=\\\"selectedReader.totalMinutesRead\\\" name=\\\"totalMinutesRead\\\">\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label class=\\\"col-lg-3 control-label\\\">Current Badge</label>\\n          <div class=\\\"col-lg-8\\\">\\n           {{ currentBadge }}\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <div class=\\\"col-lg-10 col-lg-offset-3\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"saveChanges()\\\">Save</button>\\n          </div>\\n        </div>\\n      </fieldset>\\n    </form>\\n  </div>\\n</div>\\n\";"],"sourceRoot":"webpack:///"}